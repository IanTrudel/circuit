# .github/workflows/docker-build.yml

name: Docker Image CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-googletest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Normalize image name to lowercase
        run: echo "IMAGE_NAME_LC=${GITHUB_REPOSITORY,,}" >> "$GITHUB_ENV"

      - name: Authenticate to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
               images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:googletest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Workflow/Dockerfile.googletest
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:googletest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prune docker images
        run: docker image prune -a -f

  build-llvm:
    runs-on: ubuntu-latest
    needs: build-googletest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Normalize image name to lowercase
        run: echo "IMAGE_NAME_LC=${GITHUB_REPOSITORY,,}" >> "$GITHUB_ENV"

      - name: Authenticate to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
               images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:llvm

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Workflow/Dockerfile.llvm
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:llvm
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:googletest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prune docker images
        run: docker image prune -a -f


      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Workflow/Dockerfile.slang
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:slang
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:googletest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prune docker images
        run: docker image prune -a -f

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Workflow/Dockerfile.circt
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:circt
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            IMAGE_GOOGLETEST=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:googletest
            IMAGE_LLVM=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:llvm
            IMAGE_SLANG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:slang
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prune docker images
        run: docker image prune -a -f

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Workflow/Dockerfile.circuit
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:circuit
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            IMAGE_GOOGLETEST=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:googletest
            IMAGE_LLVM=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:llvm
            IMAGE_SLANG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:slang
            IMAGE_CIRCT=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:circt
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prune docker images
        run: docker image prune -a -f
