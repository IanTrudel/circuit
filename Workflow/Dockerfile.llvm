# Building LLVM
ARG BASE_IMAGE

FROM ${BASE_IMAGE} AS googletest
FROM ubuntu:22.04 AS llvm

ARG LLVM_VERSION=18

RUN apt-get update && apt-get install -y \
   git cmake ninja-build build-essential pkg-config \
   libedit-dev libncurses5-dev libxml2-dev libsqlite3-dev zlib1g-dev \
   python3 python3-pip python3-setuptools \
   zsh curl unzip doxygen graphviz

RUN pip3 install psutil

COPY --from=googletest /opt/googletest/googletest/include /usr/local/include
COPY --from=googletest /opt/googletest/build/lib /usr/local/lib

RUN mkdir -p /opt
WORKDIR /opt

RUN git clone https://github.com/llvm/llvm-project.git --branch release/${LLVM_VERSION}.x --depth 1 

RUN mkdir -p /opt/llvm-build
WORKDIR /opt/llvm-build
RUN cmake -G Ninja ../llvm-project/llvm \
   -DLLVM_ENABLE_PROJECTS="mlir;clang" \
   -DLLVM_TARGETS_TO_BUILD="host" \
   -DCMAKE_BUILD_TYPE=Release \
   -DCMAKE_CXX_STANDARD=17 \
   -DLLVM_ENABLE_ASSERTIONS=ON \
   -DLLVM_BUILD_UTILS=ON \
   -DLLVM_INSTALL_UTILS=ON \
   -DLLVM_INCLUDE_TOOLS=ON \
   -DLLVM_USE_SPLIT_DWARF=ON \
   -DMLIR_ENABLE_EXECUTION_ENGINE=ON \
   -DCMAKE_INSTALL_PREFIX=/opt/llvm \
   -DLLVM_INCLUDE_TESTS=ON \
   -DLLVM_INSTALL_GTEST=ON \
   -DLLVM_BUILD_TESTS=ON
RUN ninja
RUN ninja FileCheck count not split-file
RUN ninja check-llvm
RUN ninja check-lit
RUN ninja check-mlir
RUN ninja install

RUN rm -rf /opt/llvm-build

ENV PATH="/opt/llvm/bin:$PATH"

RUN diff -qr ./llvm/bin /opt/llvm/bin | grep "^Only in ./llvm/bin" | awk -F': ' '{print $2}' | while read file; do cp "./llvm/bin/$(basename "$file")" /opt/llvm/bin/; done

RUN mkdir -p /opt/testsuite/
COPY Workflow/testsuite /opt/testsuite/
RUN mlir-opt /opt/testsuite/llvm/basic.mlir > /dev/null

